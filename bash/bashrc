if [ -e $HOME/.nix-profile/etc/profile.d/nix.sh ]; then . $HOME/.nix-profile/etc/profile.d/nix.sh; fi
source $HOME/.nix-profile/share/git/contrib/completion/git-prompt.sh
export GIT_PS1_SHOWCOLORHINTS=true
PS1='\w$(__git_ps1 " (%s)") \$ '

if [[ $(uname -r) == *"WSL2"* ]]; then
  # X setting for wsl2
  export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2; exit;}'):0.0
  export LIBGL_ALWAYS_INDIRECT=0
fi

eval "$(direnv hook bash)"
export GPG_TTY=$(tty)

# Fzf
fif() {
  if [ ! "$#" -gt 0 ]; then echo "Need a string to search for!"; return 1; fi
  rg --files-with-matches --no-messages "$1" | fzf --preview "highlight -O ansi -l {} 2> /dev/null | rg --colors 'match:bg:yellow' --ignore-case --pretty --context 10 '$1' || rg --ignore-case --pretty --context 10 '$1' {}"
}

fh() {
  eval $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed -E 's/ *[0-9]*\*? *//' | sed -E 's/\\/\\\\/g')
}

update() {
  osname=$(sudo hostnamectl --json=pretty | jq .OperatingSystemPrettyName)
  if [[ "$osname" == *Ubuntu* ]]; then
    cmd="sudo apt update && sudo apt upgrade -y && sudo apt autoremove"
  elif [[ "$osname" ==  *Arch* ]]; then
    cmd="sudo pacman -Syu"
  else
    echo "unknown $osname"
  fi

  eval $cmd
}
